import os

import sys
sys.stdout.reconfigure(encoding='utf-8')

import matplotlib
matplotlib.use("Agg")  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–µ–∑ GUI

import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
import requests
import json

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è API
USERNAME = "alinachrks"
API_URL = f"https://www.codewars.com/api/v1/users/{USERNAME}"
OUTPUT_DIR = "."  # –ö–æ—Ä–µ–Ω—å –≤–µ—Ç–∫–∏ output

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–∞–ø–∫–∞ output
if not os.path.exists(OUTPUT_DIR):
    os.makedirs(OUTPUT_DIR)

# –ó–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö
try:
    response = requests.get(API_URL, timeout=10)
    response.raise_for_status()  # –í—ã–∑—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É, –µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å-–∫–æ–¥ –Ω–µ 200
    data = response.json()
except requests.exceptions.RequestException as e:
    print(f"‚ö†Ô∏è Failed to fetch data from Codewars API: {e}")
    exit(1)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –¥–∞–Ω–Ω—ã—Ö
if "honor" not in data or "ranks" not in data or "codeChallenges" not in data:
    print("‚ö†Ô∏è Codewars API returned incomplete data.")
    exit(1)

# –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ
honor_points = data.get("honor", 0)
rank = data["ranks"]["overall"].get("name", "Unknown")
challenges_completed = data["codeChallenges"].get("totalCompleted", 0)

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ CSV
df = pd.DataFrame([{
    "Honor Points": honor_points,
    "Rank": rank,
    "Completed Challenges": challenges_completed
}])

df.to_csv(os.path.join(OUTPUT_DIR, "codewars_stats.csv"), index=False)

# üìä –ì—Ä–∞—Ñ–∏–∫ —Ä–æ—Å—Ç–∞ –æ—á–∫–æ–≤ Honor
plt.figure(figsize=(6, 3))
sns.barplot(x=["Honor Points"], y=[honor_points], palette="coolwarm")
plt.title("Codewars Honor Points")
plt.ylabel("Points")
plt.savefig(os.path.join(OUTPUT_DIR, "codewars_graph.svg"), format="svg")
plt.close()

# ü•á Pie Chart - –†–µ—à–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ –ø–æ —É—Ä–æ–≤–Ω—è–º
plt.figure(figsize=(4, 4))
plt.pie([challenges_completed, max(1, 100 - challenges_completed)], 
        labels=["Completed", "Remaining"], 
        autopct="%1.1f%%", colors=["#ff4757", "#dfe4ea"])
plt.title("Solved Challenges")
plt.savefig(os.path.join(OUTPUT_DIR, "codewars_pie.svg"), format="svg")
plt.close()

# üî• Heatmap (–∑–∞–≥–ª—É—à–∫–∞, –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å –ø–æ–¥ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ)
heatmap_data = pd.DataFrame({
    "Week": ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"],
    "Activity": [1, 3, 5, 2, 6, 4, 7]
})
plt.figure(figsize=(6, 3))
sns.heatmap(heatmap_data.set_index("Week"), annot=True, cmap="coolwarm")
plt.title("Weekly Codewars Activity")
plt.savefig(os.path.join(OUTPUT_DIR, "codewars_heatmap.svg"), format="svg")
plt.close()

# üìä Bar Chart - –†–∞–∑–±–∏—Ç–∏–µ –ø–æ —è–∑—ã–∫–∞–º (–µ—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ)
if "languages" in data["ranks"] and data["ranks"]["languages"]:
    languages = list(data["ranks"]["languages"].keys())
    scores = [data["ranks"]["languages"][lang]["score"] for lang in languages]

    plt.figure(figsize=(6, 3))
    sns.barplot(x=languages, y=scores, palette="magma")
    plt.title("Challenges Per Language")
    plt.xlabel("Programming Language")
    plt.ylabel("Score")
    plt.savefig(os.path.join(OUTPUT_DIR, "codewars_barchart.svg"), format="svg")
    plt.close()
else:
    print("‚ö†Ô∏è No language data available in Codewars API.")

print("‚úÖ Codewars analytics generated successfully!")
