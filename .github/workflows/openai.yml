name: OpenAI Automation

on:
  schedule:
    - cron: "0 0 * * 0"  # Запуск каждое воскресенье в 00:00 UTC
  workflow_dispatch:  # Позволяет запустить вручную

permissions:
  contents: write

jobs:
  openai-task:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v3

      - name: 📂 Ensure AI Summary File Exists
        run: |
          if [ ! -f ai_summary.md ]; then
            echo "### 🧠 AI Weekly Summary" > ai_summary.md
            echo "No summary available yet." >> ai_summary.md
          fi

      - name: 🤖 Call OpenAI API
        run: |
          echo "🚀 Calling OpenAI API..."
          RESPONSE=$(curl -s -o response.json -w "%{http_code}" -X POST "https://api.openai.com/v1/completions" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
            -d '{
              "model": "gpt-4",
              "prompt": "Generate a short and informative summary of my GitHub contributions for this week.",
              "temperature": 0.7,
              "max_tokens": 150
            }')

          HTTP_STATUS=$(tail -n1 response.json)
          if [ "$HTTP_STATUS" -ne 200 ]; then
            echo "❌ OpenAI API request failed with status $HTTP_STATUS. Skipping update."
            exit 0
          fi

          SUMMARY=$(jq -r '.choices[0].text' response.json)

          if [[ -z "$SUMMARY" || "$SUMMARY" == "null" ]]; then
            echo "⚠️ OpenAI API returned an empty response. Skipping update."
            exit 0
          fi

          TIMESTAMP=$(date +"%Y-%m-%d %H:%M:%S UTC")
          echo -e "### 🧠 AI Weekly Summary (Updated: $TIMESTAMP)\n\n$SUMMARY" > ai_summary.md
          echo "✅ AI Summary successfully updated!"

      - name: ✍️ Update README with AI Summary
        run: |
          echo "📌 Updating README.md..."
          awk '
            /<!-- START_AI_SUMMARY -->/ {print; while (getline < "ai_summary.md") print; found=1; next}
            /<!-- END_AI_SUMMARY -->/ {found=0}
            !found
          ' README.md > temp.md && mv temp.md README.md


      - name: 🔄 Commit and Push Changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          git add ai_summary.md README.md
          if git diff --cached --quiet; then
            echo "⚡ No changes to commit"
            exit 0
          fi

          git commit -m "📝 Auto-update AI Weekly Summary"
          
          # Предотвращение конфликтов при push
          git pull --rebase
          git push
